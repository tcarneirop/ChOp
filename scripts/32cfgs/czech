#!/bin/bash -l 

module load CMake/3.18.4-GCCcore-10.2.0
module load make/4.2.1-GCCcore-10.2.0
module load GCC/10.2.0
module load CUDA/11.3.1
#module load MPICH

export  GASNET_PHYSMEM_MAX='10 GB'

# Setup Chapel Home
export CHPL_VERSION="1.31.0"
# Put and compile chapel next to the launcher
export CHPL_HOME="/home/it4i-tcarn/chapel-1.31.0/"
export CHPL_LOCALE_MODEL=gpu
export CHPL_LAUNCHER="gasnetrun_ibv"
# Classical linux64 platform
export CHPL_HOST_PLATFORM="linux64"
# Use third-party LLVM
export CHPL_LLVM='bundled'
# Number of threads on each local

NUM_T_LOCALE=$(cat /proc/cpuinfo | grep processor | wc -l)

export CHPL_RT_NUM_THREADS_PER_LOCALE=$NUM_T_LOCALE

##I need to think how to use infiniband...
export CHPL_COMM='gasnet'
export CHPL_COMM_SUBSTRATE='ibv'
export CHPL_TARGET_CPU='native'
export GASNET_QUIET=1
export HFI_NO_CPUAFFINITY=1

# Specify ssh spawner
export GASNET_IBV_SPAWNER='ssh'

#if [ ! -d "$CHPL_HOME" ]; then
    #wget -c https://github.com/chapel-lang/chapel/releases/download/1.25.0/chapel-${CHPL_VERSION}.tar.gz -O - | tar xz
cd  ${CHPL_HOME}
make -j ${CHPL_RT_NUM_THREADS_PER_LOCALE}
cd ..
#fi

CHPL_BIN_SUBDIR=`"$CHPL_HOME"/util/chplenv/chpl_bin_subdir.py`
export PATH="$PATH":"$CHPL_HOME/bin/$CHPL_BIN_SUBDIR:$CHPL_HOME/util"

echo " ### exporting...  ### "

export CHOP_HOME="/home/it4i-tcarn/ChOp-chgpu/"
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:"$CHOP_HOME/libs"

echo $LD_LIBRARY_PATH



# Start computation
export GASNET_SSH_SERVERS=$(uniq $PBS_NODEFILE | tr '\n' ' ')

chpl -o hello $CHPL_HOME/examples/hello6-taskpar-dist.chpl

./hello -nl 1 > hello2


cd ${CHOP_HOME}
source export.sh
make
./bin/chop.out --size=18 --lower_bound=queens --mode=nestedml --mlsearch=chplgpu --CPUP=0.0 --initial_depth=2 --second_depth=8  -nl1
